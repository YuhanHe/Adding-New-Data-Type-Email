CREATE FUNCTION emailaddr_in(cstring)
   RETURNS emailaddr
   AS '_OBJWD_/email'
   LANGUAGE C IMMUTABLE STRICT;

CREATE FUNCTION emailaddr_out(emailaddr)
   RETURNS cstring
   AS '_OBJWD_/email'
   LANGUAGE C IMMUTABLE STRICT;

CREATE TYPE emailaddr (
   internallength = VARIABLE,
   storage = extended,
   input = emailaddr_in,
   output = emailaddr_out
);

CREATE FUNCTION emailaddr_eq(emailaddr, emailaddr) 
   RETURNS bool
   AS '_OBJWD_/email' 
   LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR = (
   leftarg = emailaddr, 
   rightarg = emailaddr, 
   procedure = emailaddr_eq,
   commutator = = ,
   negator    = <> ,
   HASHES,
   MERGES,
   restrict = eqsel, 
   join = eqjoinsel
);

CREATE FUNCTION emailaddr_ne(emailaddr, emailaddr) 
   RETURNS bool
   AS '_OBJWD_/email' 
   LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR <> (
   leftarg = emailaddr, 
   rightarg = emailaddr, 
   procedure = emailaddr_ne,
   commutator = <> ,
   negator    = = ,
   restrict = neqsel,
   HASHES,
   MERGES, 
   join = neqjoinsel
);

CREATE FUNCTION emailaddr_ed(emailaddr, emailaddr) 
   RETURNS bool
   AS '_OBJWD_/email' 
   LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR ~ (
   leftarg = emailaddr, 
   rightarg = emailaddr, 
   procedure = emailaddr_ed,
   commutator = ~ ,
   negator    = !~ ,
   restrict = eqsel, 
   HASHES,
   MERGES,
   join = eqjoinsel
);

CREATE FUNCTION emailaddr_nd(emailaddr, emailaddr) 
   RETURNS bool
   AS '_OBJWD_/email' 
   LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR !~ (
   leftarg = emailaddr, 
   rightarg = emailaddr, 
   procedure = emailaddr_nd,
   commutator = !~ ,
   negator    = ~ ,
   restrict = neqsel, 
   HASHES,
   MERGES,
   join = neqjoinsel
);

CREATE FUNCTION emailaddr_gt(emailaddr, emailaddr) 
   RETURNS bool
   AS '_OBJWD_/email' 
   LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR > (
   leftarg = emailaddr, 
   rightarg = emailaddr, 
   procedure = emailaddr_gt,
   commutator = < ,
   negator    = <= ,
   restrict = scalargtsel, 
   join = scalargtjoinsel
);

CREATE FUNCTION emailaddr_le(emailaddr, emailaddr) 
   RETURNS bool
   AS '_OBJWD_/email' 
   LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR <= (
   leftarg = emailaddr, 
   rightarg = emailaddr, 
   procedure = emailaddr_le,
   commutator = >= ,
   negator    = > ,
   restrict = scalarlesel, 
   join = scalarlejoinsel
   --restrict   = scalarltsel,
   --join       = scalarltjoinsel
);

CREATE FUNCTION emailaddr_lt(emailaddr, emailaddr) 
   RETURNS bool
   AS '_OBJWD_/email' 
   LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR < (
   leftarg = emailaddr, 
   rightarg = emailaddr, 
   procedure = emailaddr_lt,
   commutator = > ,
   negator    = >= ,
   restrict = scalarltsel, 
   join = scalarltjoinsel
);

CREATE FUNCTION emailaddr_ge(emailaddr, emailaddr) 
   RETURNS bool
   AS '_OBJWD_/email' 
   LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR >= (
   leftarg = emailaddr, 
   rightarg = emailaddr, 
   procedure = emailaddr_ge,
   commutator = <= ,
   negator    = < ,
   restrict = scalargesel, 
   join = scalargejoinsel
   --restrict   = scalargtsel,
   --join       = scalargtjoinsel
);

--
-- Support functions for indexing.
--
CREATE FUNCTION emailaddr_cmp(emailaddr, emailaddr)
   RETURNS int4
   AS '_OBJWD_/email'
   LANGUAGE C IMMUTABLE STRICT;

CREATE FUNCTION emailaddr_hash(emailaddr)
   RETURNS int4
   AS '_OBJWD_/email'
   LANGUAGE C IMMUTABLE STRICT;

-- The btree indexing operator class.

CREATE OPERATOR CLASS emailaddr_ops
    DEFAULT FOR TYPE emailaddr USING btree AS
        OPERATOR        1       <  (emailaddr, emailaddr),
        OPERATOR        2       <= (emailaddr, emailaddr),
        OPERATOR        3       =  (emailaddr, emailaddr),
        OPERATOR        4       >= (emailaddr, emailaddr),
        OPERATOR        5       >  (emailaddr, emailaddr),
        FUNCTION        1       emailaddr_cmp(emailaddr, emailaddr);

-- The hash indexing operator class.

CREATE OPERATOR CLASS emailaddr_ops
   DEFAULT FOR TYPE emailaddr USING hash AS
      OPERATOR    1   =  (emailaddr, emailaddr),
      FUNCTION    1   emailaddr_hash(emailaddr);



--drop table email_test;
--drop type emailaddr CASCADE;
